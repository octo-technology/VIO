---

- name: Set inventory ansible_port 22000
  set_fact:
    ansible_port: "22000"

- name: Set configured port fact
  set_fact:
    configured_port: "{{ ansible_port }}"

- name: Check if we're using the default SSH port
  wait_for:
    port: "22"
    state: "started"
    host: "{{ hostvars.grafana_ebcf.ansible_host }}"
    connect_timeout: "5"
    timeout: "10"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: default_ssh

- name: Set inventory ansible_port to default
  set_fact:
    ansible_port: "22"
  when: default_ssh is defined and "state" in default_ssh and default_ssh.state == "started"
  register: ssh_port_set


- name: Check if we're using the inventory-provided SSH port
  wait_for:
    port: "{{ ansible_port }}"
    state: "started"
    host: "{{ hostvars.grafana_ebcf.ansible_host }}"
    connect_timeout: "5"
    timeout: "10"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: configured_ssh
  when: default_ssh is defined and default_ssh.state is undefined

- name: SSH port is configured properly
  debug:
    msg: "SSH port is configured properly"
  when:
    - configured_ssh is defined and configured_ssh.state is defined and configured_ssh.state == "started"
  register: ssh_port_set


- name: Fail if SSH port was not auto-detected (unknown)
  fail:
    msg: "The SSH port is neither 22 or {{ ansible_port }}."
  when: ssh_port_set is undefined

- name: Confirm host connection works
  ping:

- name: Setup alternate SSH port
  become: true
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^Port"
    line: "Port {{ configured_port }}"
  notify:
    - Restart ssh

- name: Disallow root SSH access
  become: true
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
    state: present
  notify:
    - Restart ssh

- name: Disallow password authentication
  become: true
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^PasswordAuthentication"
    line: "PasswordAuthentication no"
    state: present
  notify:
    - Restart ssh

- name: Change SSHD port
  become: true
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "#Port 22"
    line: "Port {{ ssh_port }}"
    state: present
  notify:
    - Restart ssh

- name: Allow only deploy user to login "{{ vm_admin_username }}"
  become: true
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^AllowUsers"
    line: "AllowUsers {{ vm_admin_username }}"
    state: present
  notify:
    - Restart ssh
