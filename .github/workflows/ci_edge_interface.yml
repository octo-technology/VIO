name: CI edge_interface
run-name: edge_interface CI on branch >> ${{ github.ref_name }} <<

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'edge_interface/**'

env:
  REGISTRY: ghcr.io

jobs:
  lint_and_test_on_edge_interface:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: Install dependencies
        run: npm install
        working-directory: ./edge_interface

      - name: Lint
        run: npm run lint
        working-directory: ./edge_interface

  build_and_push_images:
    name: Push Docker image to multiple registries
    needs: lint_and_test_on_edge_interface
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./edge_interface/Dockerfile
            image: ghcr.io/${{ github.repository }}/edge_interface
            context: ./edge_interface
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: latest=auto

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
