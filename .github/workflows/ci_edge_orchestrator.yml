name: CI edge_orchestrator
run-name: edge_orchestrator CI on branch >> ${{ github.ref_name }} <<

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'edge_orchestrator/**'

jobs:
  lint_and_test_on_edge_orchestrator:
    name: Run Python linter and tests (unit > integration > functional)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    services:
      edge_model_serving:
        image: ghcr.io/octo-technology/vio/edge_model_serving:main
        ports:
          - 8501:8501
      edge_tflite_serving:
        image: ghcr.io/octo-technology/vio/edge_tflite_serving:main
        ports:
          - 8502:8501
    env:
      TENSORFLOW_SERVING_HOST: localhost
      TENSORFLOW_SERVING_PORT: 8501
      TFLITE_SERVING_HOST: localhost
      TFLITE_SERVING_PORT: 8502
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make install
        working-directory: ./edge_orchestrator

      - name: Lint with flake8 and black
        run: make lint
        working-directory: ./edge_orchestrator

      - name: Run unit tests
        run: make unit_tests
        working-directory: ./edge_orchestrator

      - name: Upload unit test report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Unit tests report in Python ${{ matrix.python-version }}
          path: edge_orchestrator/reports/pytest/unit-tests-report.xml
          reporter: java-junit

      - name: Run integration tests
        run: make integration_tests
        working-directory: ./edge_orchestrator

      - name: Upload integration test report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Integration tests report in Python ${{ matrix.python-version }}
          path: edge_orchestrator/reports/pytest/integration-tests-report.xml
          reporter: java-junit

      - name: Run functional tests
        run: make functional_tests
        working-directory: ./edge_orchestrator

      - name: Upload functional test report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Functional tests report in Python ${{ matrix.python-version }}
          path: edge_orchestrator/reports/behave/*.xml
          reporter: java-junit

  build_and_push_images:
    needs: lint_and_test_on_edge_orchestrator
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./edge_orchestrator/Dockerfile
            image: ghcr.io/${{ github.repository }}/edge_orchestrator
            context: ./edge_orchestrator
    uses: ./.github/workflows/template_build_and_push_docker_images.yml
    with:
      context: ${{ matrix.context }}
      dockerfile: ${{ matrix.dockerfile }}
      image: ${{ matrix.image }}
    secrets:
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}

